/*
You are given a set of mappings between digits and letters, representing the characters associated with each digit on an old mobile phone keypad. The mappings are as follows:

2: 'abc',
3: 'def',
4: 'ghi',
5: 'jkl',
6: 'mno',
7: 'pqrs',
8: 'tuv',
9: 'wxyz'

You are given a sequence of button presses without considering repetitions. Your task is to print all possible combinations of letters that can be generated by the given sequence of button presses.

Input format:
The input is a string consisting of digits 2-9 only. The length of the string does not exceed 10 characters.

Output format:
Print all possible combinations of letters separated by a space.

Example:

Input:
92

Output:
wa wb wc xa xb xc ya yb yc za zb zc
*/


const readline = require('readline');

const reader = readline.createInterface({
  input: process.stdin
});

const inputLines = [];
let curLine = 0;

reader.on('line', line => {
  inputLines.push(line);
});

process.stdin.on('end', solve);

function solve() {
  const numbers = inputLines[curLine].split('');

  const combinations = getCombinations(numbers);

  process.stdout.write(combinations);
}

function getCombinations(numbers) {
  const keypad = {
    2: 'abc',
    3: 'def',
    4: 'ghi',
    5: 'jkl',
    6: 'mno',
    7: 'pqrs',
    8: 'tuv',
    9: 'wxyz'
  };

  function generateCombinations(index, combination) {
    if (index === numbers.length) {
      return [combination];
    }

    const digit = numbers[index];
    const letters = keypad[digit];

    const combinations = [];

    for (let i = 0; i < letters.length; i++) {
      const letter = letters[i];
      const newCombinations = generateCombinations(index + 1, combination + letter);
      combinations.push(...newCombinations);
    }

    return combinations;
  }

  const combinations = generateCombinations(0, '');

  return combinations.join(' ');
}

